"use strict";(self.webpackChunkakita_docs=self.webpackChunkakita_docs||[]).push([[1122],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=s,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:s,a[1]=i;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5944:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(3117),s=n(102),o=(n(7294),n(3905)),a=["components"],i={title:"The Store"},l=void 0,c={unversionedId:"store",id:"store",title:"The Store",description:"The Store is a single object which contains the store state and serves as the single source of truth.",source:"@site/docs/store.mdx",sourceDirName:".",slug:"/store",permalink:"/akita/docs/store",draft:!1,editUrl:"https://github.com/salesforce/akita/edit/master/docs/docs/store.mdx",tags:[],version:"current",frontMatter:{title:"The Store"},sidebar:"docs",previous:{title:"Installation",permalink:"/akita/docs/installation"},next:{title:"The Query",permalink:"/akita/docs/query"}},p={},u=[{value:"<code>update()</code>",id:"update",level:3},{value:"<code>setLoading()</code>",id:"setloading",level:3},{value:"<code>setError()</code>",id:"seterror",level:3},{value:"<code>destroy()</code>",id:"destroy",level:3}],d={toc:u};function m(e){var t=e.components,n=(0,s.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Store")," is a single object which contains the store state and serves as the ",(0,o.kt)("em",{parentName:"p"},"single source of truth"),"."),(0,o.kt)("p",null,"To create a store, you need to extend Akita's ",(0,o.kt)("inlineCode",{parentName:"p"},"Store"),", passing the type as well as its initial state:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="session.store.ts"',title:'"session.store.ts"'},"import { Store, StoreConfig } from '@datorama/akita';\n\nexport interface SessionState {\n   token: string;\n   name: string;\n}\n\nexport function createInitialState(): SessionState {\n  return {\n    token: '',\n    name: ''\n  };\n}\n\n@StoreConfig({ name: 'session' })\nexport class SessionStore extends Store<SessionState> {\n  constructor() {\n    super(createInitialState());\n  }\n}\n")),(0,o.kt)("p",null,"With this setup you get a ",(0,o.kt)("inlineCode",{parentName:"p"},"Store")," with the following methods:"),(0,o.kt)("h3",{id:"update"},(0,o.kt)("inlineCode",{parentName:"h3"},"update()")),(0,o.kt)("p",null,"When you want to update the store, you can call the ",(0,o.kt)("inlineCode",{parentName:"p"},"update()")," method passing the new ",(0,o.kt)("inlineCode",{parentName:"p"},"state"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="session.service.ts"',title:'"session.service.ts"'},"import { SessionStore } from './session.store';\n \nexport class SessionService {\n  constructor(private sessionStore: SessionStore) {}\n\n  updateUserName(newName: string) {\n    this.sessionStore.update({ name: newName });\n  }  \n}\n")),(0,o.kt)("p",null,"The second ",(0,o.kt)("inlineCode",{parentName:"p"},"update()")," option gives you more control. It receives a ",(0,o.kt)("inlineCode",{parentName:"p"},"callback")," function, which gets the current state, and returns a new ",(0,o.kt)("strong",{parentName:"p"},"immutable")," state, which will be the new value of the store. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="session.service.ts"',title:'"session.service.ts"'},"import { SessionStore } from './session.store';\n \nexport class SessionService {\n  constructor(private sessionStore: SessionStore) {}\n\n  updateUserName(newName: string) {\n    this.sessionStore.update(state => ({\n      name: newName\n    }));\n  }  \n}\n")),(0,o.kt)("h3",{id:"setloading"},(0,o.kt)("inlineCode",{parentName:"h3"},"setLoading()")),(0,o.kt)("p",null,"Set the ",(0,o.kt)("inlineCode",{parentName:"p"},"loading")," state:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="session.service.ts"',title:'"session.service.ts"'},"import { SessionStore } from './session.store';\n \nexport class SessionService {\n  constructor(private sessionStore: SessionStore, \n              private http: HttpClient) {}\n\n  async updateUserName(newName: string) {\n    this.sessionStore.setLoading(true);\n    await this.http(...).toPromise();\n    this.sessionStore.update({ name: newName});\n    this.sessionStore.setLoading(false);\n  }  \n}\n")),(0,o.kt)("h3",{id:"seterror"},(0,o.kt)("inlineCode",{parentName:"h3"},"setError()")),(0,o.kt)("p",null,"Set the ",(0,o.kt)("inlineCode",{parentName:"p"},"error")," state:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="session.service.ts"',title:'"session.service.ts"'},"import { SessionStore } from './session.store';\n \nexport class SessionService {\n  constructor(private sessionStore: SessionStore, \n              private http: HttpClient) {}\n\n  async updateUserName(newName: string) {\n    try {\n      await this.http(...).toPromise();\n    } catch(error) {\n      this.sessionStore.setError(error);\n    }\n  }  \n}\n")),(0,o.kt)("h3",{id:"destroy"},(0,o.kt)("inlineCode",{parentName:"h3"},"destroy()")),(0,o.kt)("p",null,"Destroys the store:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"sessionStore.destroy();\n")))}m.isMDXComponent=!0}}]);