"use strict";(self.webpackChunkakita_docs=self.webpackChunkakita_docs||[]).push([[914],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=i,m=u["".concat(c,".").concat(d)]||u[d]||f[d]||r;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3622:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var a=n(3117),i=n(102),r=(n(7294),n(3905)),o=["components"],s={title:"Effects"},c=void 0,l={unversionedId:"angular/effects",id:"angular/effects",title:"Effects",description:"This library is deprecated. Use ngneat/effects instead.",source:"@site/docs/angular/effects.mdx",sourceDirName:"angular",slug:"/angular/effects",permalink:"/akita/docs/angular/effects",draft:!1,editUrl:"https://github.com/salesforce/akita/edit/master/docs/docs/angular/effects.mdx",tags:[],version:"current",frontMatter:{title:"Effects"},sidebar:"docs",previous:{title:"Ng Entity Service",permalink:"/akita/docs/angular/entity-service"},next:{title:"Angular Router Store",permalink:"/akita/docs/angular/router"}},p={},u=[{value:"Setup Actions",id:"setup-actions",level:2},{value:"Setup Effects",id:"setup-effects",level:2},{value:"The parameter <code>dispatch</code>",id:"the-parameter-dispatch",level:4},{value:"Possible use case",id:"possible-use-case",level:3}],f={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This library is deprecated. Use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ngneat/effects#use-with-angular"},"ngneat/effects")," instead.")),(0,r.kt)("p",null,"Effects can be used to execute side effects (actions, http requests and other operations) upon action events. First, install the package:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @datorama/akita-ng-effects\n")),(0,r.kt)("p",null,"Next, to register effects, simply run ",(0,r.kt)("inlineCode",{parentName:"p"},"AkitaNgEffects.forRoot()")," and register the effect classes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app.module.ts"',title:'"app.module.ts"'},"import { AkitaNgEffectsModule } from '@datorama/akita-ng-effects';\nimport { NavigationEffects } from './path/to/effects';\n\n// Only use .forRoot() once in your base module.\n@NgModule({\n  imports: [CommonModule, AkitaNgEffectsModule.forRoot([NavigationEffects])],\n})\nexport class AppModule {}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="product.module.ts"',title:'"product.module.ts"'},"import { AkitaNgEffectsModule } from '@datorama/akita-ng-effects';\nimport { ProductEffects } from './path/to/effects';\n\n// Use .forFeature() on any feature module\n@NgModule({\n  imports: [CommonModule, AkitaNgEffectsModule.forFeature([ProductEffects])],\n})\nexport class FeatureModule {}\n")),(0,r.kt)("h2",{id:"setup-actions"},"Setup Actions"),(0,r.kt)("p",null,"An action always holds a type property and an optional payload."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="navigation.actions.ts"',title:'"navigation.actions.ts"'},"import { createAction } from '@datorama/akita-ng-effects';\n\nexport const loadMainNavigation = createAction('[Navigation] Load Main Navigation');\n\nexport const loadMainNavigationSuccess = createAction(\n  '[Navigation] Load Main Navigation Success',\n   props<{ mainNav: { id: number; path: string } }>()\n);\n")),(0,r.kt)("h2",{id:"setup-effects"},"Setup Effects"),(0,r.kt)("p",null,"You can use the actions to act upon any action event:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="navigation.effect.ts"',title:'"navigation.effect.ts"'},"import { Actions } from '@datorama/akita-ng-effects';\n\n@Injectable()\nexport class NavigationEffects {\n  constructor(\n    private actions$: Actions,\n    private navigationService: NavigationService,\n  ) {}\n\n  loadMainNavigation$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMainNavigation),\n      switchMap((_) =>\n         this.navigationService.loadMainNavigation().pipe(\n           map((mainNav) => loadMainNavigationSuccess({ mainNav }))\n        )\n      )\n    ), { dispatch: true }\n  );\n\n  // Or use the decorator\n  @Effect()\n  loadMainNavigationSuccess$ = this.actions$.pipe(\n    ofType(loadMainNavigationSuccess),\n    map(({ mainNav }) => this.navigationService.updateNavigationTree(mainNav)),\n    tap((mainRoutes) => this.store.updateNavigation(mainRoutes))\n  );\n}\n")),(0,r.kt)("h4",{id:"the-parameter-dispatch"},"The parameter ",(0,r.kt)("inlineCode",{parentName:"h4"},"dispatch")),(0,r.kt)("p",null,"This parameter dictates if the effect can dispatch an action. Set ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if you want the effect to dispatch an action. Set to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," or omit if the effect should not dispatch any action."),(0,r.kt)("h3",{id:"possible-use-case"},"Possible use case"),(0,r.kt)("p",null,"This is one possible use case for an action inside a guard to initialize fetching of a navigation."),(0,r.kt)("p",null,"You can also use them in components in order to fetch data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="init-route.guard.ts"',title:'"init-route.guard.ts"'},"@Injectable({\n  providedIn: 'root',\n})\nexport class InitRouterGuard implements CanActivate {\n  constructor(private actions: Actions, private navigationQuery: NavigationQuery) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> {\n    return this.navigationQuery.isNavInitialized$.pipe(\n      tap((isInit) => {\n        if (!isInit) this.actions.dispatch(loadMainNavigation());\n      }),\n      filter((isInit) => isInit),\n      map((_) => true)\n    );\n  }\n}\n")))}d.isMDXComponent=!0}}]);