(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{107:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return y}));var n=r(0),o=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=o.a.createContext({}),l=function(e){var t=o.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=l(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),b=n,y=p["".concat(a,".").concat(b)]||p[b]||d[b]||i;return r?o.a.createElement(y,c(c({ref:t},u),{},{components:r})):o.a.createElement(y,c({ref:t},u))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var u=2;u<i;u++)a[u]=r[u];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},94:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return a})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return u}));var n=r(2),o=(r(0),r(107));const i={title:"Sorting"},a={unversionedId:"entities/sorting",id:"entities/sorting",isDocsHomePage:!1,title:"Sorting",description:"By default, the store returns entities in the order in which they arrived from the server. The entities you add are pushed to the end of the collection.",source:"@site/docs/entities/sorting.mdx",slug:"/entities/sorting",permalink:"/akita/docs/entities/sorting",editUrl:"https://github.com/datorama/akita/edit/master/docs/docs/entities/sorting.mdx",version:"current",sidebar:"docs",previous:{title:"Active Entity",permalink:"/akita/docs/entities/active"},next:{title:"UI State",permalink:"/akita/docs/ui"}},c=[],s={rightToc:c};function u({components:e,...t}){return Object(o.b)("wrapper",Object(n.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"By default, the store returns entities in the order in which they arrived from the server. The entities you add are pushed to the end of the collection.\nYou may prefer getting the entities from the store in some other order. You can provide a ",Object(o.b)("inlineCode",{parentName:"p"},"sortBy")," option which could be based on an entity ",Object(o.b)("inlineCode",{parentName:"p"},"key")," or a ",Object(o.b)("inlineCode",{parentName:"p"},"comparer")," function."),Object(o.b)("p",null,"Akita will keep the collection in the order prescribed by your ",Object(o.b)("inlineCode",{parentName:"p"},"key")," or ",Object(o.b)("inlineCode",{parentName:"p"},"comparer"),". You can set it once for the entire Query:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:'title="products.query.ts"',title:'"products.query.ts"'}),"import { QueryConfig, Order } from '@datorama/akita';\n \n@QueryConfig({\n  sortBy: 'price',\n  sortByOrder: Order.ASC\n})\nexport class ProductsQuery extends QueryEntity<ProductsState> {\n  constructor(protected store: ProductsStore) {\n    super(store);\n  }\n}\n")),Object(o.b)("p",null,"Or you can set it per ",Object(o.b)("inlineCode",{parentName:"p"},"selectAll()"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"const products$ = sortControl.valueChanges.pipe(\n   startWith('title'),\n   switchMap((sortBy) => productsQuery.selectAll({\n     sortBy\n   }))\n );\n")),Object(o.b)("p",null,"The query ",Object(o.b)("inlineCode",{parentName:"p"},"sortBy")," function also passes the whole ",Object(o.b)("inlineCode",{parentName:"p"},"state")," as the third argument, give you the ability to return a different ",Object(o.b)("inlineCode",{parentName:"p"},"sortBy")," function based on your current ",Object(o.b)("inlineCode",{parentName:"p"},"state"),". For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"const sortBy = (a, b, state) => (\n    state.sortyByPrice ? \n    sortByPrice(a, b) : \n    sortById(a, b)\n);\n\n// With QueryConfig\n@QueryConfig({ sortBy })\n\n// With selectAll\nqueryTodos.selectAll({ sortBy });\n")))}u.isMDXComponent=!0}}]);